---
title: "Estimating counterfactuals"
author: "Lucy D'Agostino McGowan"
format: 
  kakashi-revealjs:
    self-contained: true
footer: "Slides by [Dr. Lucy D'Agostino McGowan](https://lucymcgowan.com)"
---


# Randomized trials {background-color="#23373B"}

```{r}
#| label: setup
#| include: false
source(here::here("setup.R"))

options(
  tibble.max_extra_cols = 6, 
  tibble.width = 60
)

```

## Randomization 

- **Purpose of Randomization**: Solves key issues in causal inference
  - Consistency
  - Positivity
  - Does not address interference

## Ideal vs Realizstic Randomized Trials

- **Ideal Randomized Trials**
  - Achieve exchangeability
- **Realistic Randomized Trials**
  - May violate exchangeability with non-adherence / dropout
  
##

| Assumption            | Ideal Randomized Trial | Realistic Randomized Trial | Observational Study  |
|-----------------|-----------------|---------------------|-------------------|
| Consistency (Well defined exposure) | `r emo::ji("smile")`   | `r emo::ji("smile")`       | `r emo::ji("shrug")` |
| Consistency (No interference)       | `r emo::ji("shrug")`   | `r emo::ji("shrug")`       | `r emo::ji("shrug")` |
| Positivity            | `r emo::ji("smile")`   | `r emo::ji("smile")`       | `r emo::ji("shrug")` |
| Exchangeability       | `r emo::ji("smile")`   | `r emo::ji("shrug")`       | `r emo::ji("shrug")` |

# Study Protocol {background-color="#23373B"}

## {background-color="#23373B"}

::: small
1. Eligibility criteria
2. Exposure definition
3. Assignment procedures
4. Follow-up period
5. Outcome definition
6. Causal contrast of interest
7. Analysis plan
:::

## Protcol elements mapped to assumptions

::: small

Assumption | Eligibility Criteria | Exposure Definition| Assignment Procedures | Follow-up Period | Outcome Definition | Causal contrast | Analysis Plan
------------|----------------- | ------------------|---------|----------|----------|--------- | -------
Consistency (Well defined exposure) | |`r emo::ji("heavy_check_mark")`|| | |
Consistency (No interference) | | `r emo::ji("heavy_check_mark")`|`r emo::ji("heavy_check_mark")` | | `r emo::ji("heavy_check_mark")` | | `r emo::ji("heavy_check_mark")`
Positivity |`r emo::ji("heavy_check_mark")`||`r emo::ji("heavy_check_mark")`|| | | `r emo::ji("heavy_check_mark")`
Exchangeability |`r emo::ji("heavy_check_mark")`||`r emo::ji("heavy_check_mark")`|`r emo::ji("heavy_check_mark")`|| | `r emo::ji("heavy_check_mark")`

:::

## Mapped to diagraming causal claims

```{r}
#| echo: false
#| fig-height: 2
data <- data.frame(labels = c("exposure", "outcome", "eligibility criteria", "time zero", "target population", "follow-up time"),
                   x = c(1.25, 1.75, 1.25, 1.55, 1.8, 2.15),
                   y = c(1, 1, 0.8, 0.7, 0.8, 0.7),
                   angle = c(0, 0, -50, 0, -50, 0))  

ggplot(data, aes(x = x, y = y)) +
  geom_text(aes(label = labels, angle = angle, vjust = 0), 
            size = 7) +
  geom_segment(aes(x = 1, xend = 2, y = 0.95, yend = 0.95)) +  
  geom_segment(aes(x = 1.5, xend = 1.5, y = 0.95, yend = 1.1)) +
  geom_segment(aes(x = 1, xend = 1.35, y = 0.95, yend = 0.65)) +
  geom_segment(aes(x = 1.35, xend = 1.65, y = 0.65, yend = 0.65)) +
  geom_segment(aes(x = 1.55, xend = 1.9, y = 0.95, yend = 0.65)) +
  geom_segment(aes(x = 1.9, xend = 2.15, y = 0.65, yend = 0.65)) +
  theme_void()
```

# Target Trials {background-color="#23373B"}

## Target Trials

* There are many reasons why randomization may not be possible
  * it might not be ethical to randomly assign people to a particular exposure
  * there may not be funding available
  * there might not be enough time to conduct a full trial

## Target Trial

* In these situations, we rely on observational data to help us answer causal questions by implementing a *target trial*
* A *target trial* answers: What experiment would you design if you could? 

## Let's try a simple example

```{r}
#| echo: false
set.seed(1)
n <- 10000 
sim <- tibble(
  # generate the confounder from a binomial distribution
  # with a probability 0.5 for being in either group 
  confounder = rbinom(n, 1, 0.5),
  # make the probability of exposure dependent on the 
  # confounder value
  p_exposure = case_when(
    confounder == 1 ~ 0.75,
    confounder == 0 ~ 0.25
  ),
  # generate the exposure from a binomial distribution
  # with the probability of exposure dependent on the confounder
  exposure = rbinom(n, 1, p_exposure),
  # generate the "true" average treatment effect of 0 
  # to do this, we are going to generate the potential outcomes, first 
  # the potential outcome if exposure = 0
  # (notice exposure is not in the equation below, only the confounder)
  # we use rnorm(n) to add the random error term that is normally
  # distributed with a mean of 0 and a standard deviation of 1
  y0 = confounder + rnorm(n),
  # because the true effect is 0, the potential outcome if exposure = 1
  # is identical
  y1 = y0,
  # now, in practice we will only see one of these, outcome is what is 
  # observed
  outcome = (1 - exposure) * y0 + exposure * y1,
  observed_potential_outcome = case_when(
    exposure == 0 ~ "y0",
    exposure == 1 ~ "y1"
  )
)
sim |>
  select(confounder, exposure, outcome)
```

## Let's try a simple example

::: small

1. Eligibility criteria: everyone
2. Exposure definition: `exposed = 1` vs `exposed = 0`
3. Assignment procedures: people who have `confounder = 1` are more likely to be exposed
4. Follow-up period: (until outcome observed)
5. Outcome definition: `outcome`
6. Causal contrast of interest: $\textrm{E}[Y(1) - Y(0)]$
7. Analysis plan: stratified analysis
:::


## Let's try a simple example

::: nonincremental

::: small

1. Eligibility criteria: everyone
2. Exposure definition: `exposed = 1` vs `exposed = 0`
3. Assignment procedures: **people who have `confounder = 1` are more likely to be exposed**
4. Follow-up period: (until outcome observed)
5. Outcome definition: `outcome`
6. Causal contrast of interest: $\textrm{E}[Y(1) - Y(0)]$
7. Analysis plan: stratified analysis
:::

:::

## Causal Diagram

```{r}
#| echo: false
#| message: false
#| warning: false
library(ggdag)
library(ggokabeito)

coords <- list(
  x = c(exposure = 2, confounder = 1, outcome = 3),
  y = c(exposure = 1, confounder = 1.1, outcome = 1)
)
d_conf <- dagify(
  exposure ~ confounder,
  outcome ~ exposure + confounder,
  exposure = "exposure",
  outcome = "outcome",
  labels = c(exposure = "exposure", outcome = "outcome", confounder = "confounder"),
  coords = coords
)

d_conf |>
  tidy_dagitty() |>
  ggplot(
    aes(x = x, y = y, xend = xend, yend = yend)
  ) +
  geom_dag_point(aes(color = label)) +
  geom_dag_edges() +
  geom_dag_text(size = 2.2) +
  theme_dag() +
  coord_cartesian(clip = "off") +
  theme(legend.position = "none") 
```
## {{< fa laptop >}} Application Exercise

::: nonincremental

Find your starter repo on `sta-779-s23` that starts with `appex-02`

::: small
1. Run the `sim` code chunk to run the simulation
2. What is the probability that `exposure = 1` given `confounder = 1`?
3. What is the probability that `exposure = 0` given `confounder = 1`
4. What is the difference in the average outcome between exposure groups?
:::

:::

```{r}
#| echo: false
countdown::countdown(10)
```

## {{< fa laptop >}} Application Exercise

1. Stratify by `confounder` and calculate the average difference between exposure group within each stratum
2. Compare this to the "Truth" from the simulation

```{r}
#| echo: false
countdown::countdown(5)
```
